apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: dac
  name: dac
spec:
  replicas: 4
  selector:
    matchLabels:
      app: dac
  strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
  # mark deployment as failed, if not finished within 60 seconds
  progressDeadlineSeconds: 60
  template:
    metadata:
      labels:
        app: dac
    spec:
      containers:
      - name: dac
        image: delasoul/demo-akka-cluster:latest
        imagePullPolicy: Never
        ports:
        # akka remoting
        - name: remoting
          containerPort: 2551
          protocol: TCP
        # akka-management bootstrap
        - name: akka-mgmt-http
          containerPort: 8558
          protocol: TCP
        # external http
        - name: http
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /system/readiness
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 2
          periodSeconds: 2
          failureThreshold: 3
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /system/liveness
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 5
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              # Create file for readiness probe
              # waiting for readiness check to fail
              # readiness check is responsible to stop traffic to container before shutting down
              # sleep time is based on the time the readiness check needs to fail:
              # readinessProbe.failureThreshold * readinessProbe.periodSeconds + readinessProbe.periodSeconds
              command:
                ["/bin/bash", "-c", "touch /tmp/shutdown && sleep 8"]
---
kind: Service
apiVersion: v1
metadata:
  name: dac-headless-service
spec:
  # clusterIP to None == headless service
  clusterIP: None
  selector:
    app: dac
  ports:
  - protocol: TCP
    port: 8558
    targetPort: akka-mgmt-http

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
- kind: User
  name: system:serviceaccount:default:default # 1st default == namespace, 2nd default == service account name
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io

